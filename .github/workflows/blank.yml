name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

# ensures one run at a time, and cancel older runs in the queue if new commits r pushed
concurrency:
 group: androidTest-${{ github.ref }}
 cancel-in-progress: true


jobs:

  lint:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Give gradlew execute permission
        run: chmod +x ./gradlew

      - name: Setup Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: sample run
        run: echo lint

#      - name: Run lint
#        run: ./gradlew lintDebug
#
#      - name: Upload lint report
#        uses: actions/upload-artifact@v4
#        with:
#          name: lint-report
#          path: app/build/reports/lint-results-debug.html

  unit-test:
#    needs: [lint]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Give gradlew execute permission
        run: chmod +x ./gradlew

      - name: Setup Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: sample run
        run: echo test

#      - name: Run tests
#        run: ./gradlew test
#
#      - name: Upload the test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: unit test-report
#          path: app/build/reports/tests/testDebugUnitTest/







#  static-code-analysis:
##    needs: [ instrumentation-test ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v2
#
##      - name: set up JDK 11
##        uses: actions/setup-java@v1
##        with:
##          java-version: 11
#
#      - name: Set up Java 17
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: 17
#
#      - name: Give gradlew execute permission
#        run: chmod +x ./gradlew
#
#      - name: SonarCloud Scan
#        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
